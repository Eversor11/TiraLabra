package gui;

import apuneuvot.MatriisienLukija;
import apuneuvot.MatriisienTallentaja;
import java.util.Scanner;
import javax.swing.JOptionPane;
import logiikka.Matriisilaskin;

/**
 * Kayttoliittyma-luokka, joka toimii matriisilaskimen graafisena 
 * käyttöliittymänä.
 * 
 * @author Eversor
 */
public class Kayttoliittyma extends javax.swing.JFrame {

    private int rivitA;
    private int rivitB;
    private int rivitC;
    private int sarakkeetA;
    private int sarakkeetB;
    private int sarakkeetC;
    private String matriisiAString;
    private String matriisiBString;
    private String matriisiCString;
    private double[][] matriisiA;
    private double[][] matriisiB;
    private double[][] matriisiC;
    private Scanner lukija;
    private MatriisienLukija matriisienlukija;
    private MatriisienTallentaja tallentaja;
    private Matriisilaskin laskin;
    
    /**
     * Konstruktori, joka asettaa matriisien rivit ja sarakkeet nolliksi ja
     * luo uudet ilmentymät MatriisienLukijasta, -Tallentajasta sekä Matriisi-
     * laskin-luokista niiden private-muuttujiin. Lopuksi initialisoi komponen-
     * tit.
     */
    public Kayttoliittyma() {
        rivitA = 0;
        rivitB = 0;
        rivitC = 0;
        sarakkeetA = 0;
        sarakkeetB = 0;
        sarakkeetC = 0;

        matriisienlukija = new MatriisienLukija();
        tallentaja = new MatriisienTallentaja();
        laskin = new Matriisilaskin();

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alustaPanel = new javax.swing.JPanel();
        matriisiAPanel = new javax.swing.JPanel();
        rivitALabel = new javax.swing.JLabel();
        rivitAText = new javax.swing.JTextField();
        sarakkeetALabel = new javax.swing.JLabel();
        sarakkeetAText = new javax.swing.JTextField();
        matriisiAScroll = new javax.swing.JScrollPane();
        matriisiAText = new javax.swing.JTextArea();
        lataaAText = new javax.swing.JTextField();
        neliomatriisiALabel = new javax.swing.JLabel();
        symmetrinenALabel = new javax.swing.JLabel();
        antisymmetrinenALabel = new javax.swing.JLabel();
        kaantyvaALabel = new javax.swing.JLabel();
        ortogonaalinenALabel = new javax.swing.JLabel();
        determinanttiALabel = new javax.swing.JLabel();
        tiedotAButton = new javax.swing.JButton();
        ortogonaalinenATulosLabel = new javax.swing.JLabel();
        determinanttiATulosLabel = new javax.swing.JLabel();
        antisymmetrinenATulosLabel = new javax.swing.JLabel();
        kaantyvaATulosLabel = new javax.swing.JLabel();
        symmetrinenATulosLabel = new javax.swing.JLabel();
        neliomatriisiATulosLabel = new javax.swing.JLabel();
        transpoosiAButton = new javax.swing.JButton();
        kaanteismatriisiAButton = new javax.swing.JButton();
        potenssiinAButton = new javax.swing.JButton();
        potenssiinAText = new javax.swing.JTextField();
        lataaAButton = new javax.swing.JButton();
        summaaButton = new javax.swing.JButton();
        vahennaButton = new javax.swing.JButton();
        kerroButton = new javax.swing.JButton();
        matriisiBPanel = new javax.swing.JPanel();
        rivitBLabel = new javax.swing.JLabel();
        rivitBText = new javax.swing.JTextField();
        sarakkeetBLabel = new javax.swing.JLabel();
        sarakkeetBText = new javax.swing.JTextField();
        matriisiBScroll = new javax.swing.JScrollPane();
        matriisiBText = new javax.swing.JTextArea();
        lataaBText = new javax.swing.JTextField();
        neliomatriisiBLabel = new javax.swing.JLabel();
        symmetrinenBLabel = new javax.swing.JLabel();
        antisymmetrinenBLabel = new javax.swing.JLabel();
        kaantyvaBLabel = new javax.swing.JLabel();
        ortogonaalinenBLabel = new javax.swing.JLabel();
        determinanttiBLabel = new javax.swing.JLabel();
        tiedotBButton = new javax.swing.JButton();
        ortogonaalinenBTulosLabel = new javax.swing.JLabel();
        determinanttiBTulosLabel = new javax.swing.JLabel();
        antisymmetrinenBTulosLabel = new javax.swing.JLabel();
        kaantyvaBTulosLabel = new javax.swing.JLabel();
        symmetrinenBTulosLabel = new javax.swing.JLabel();
        neliomatriisiBTulosLabel = new javax.swing.JLabel();
        transpoosiBButton = new javax.swing.JButton();
        kaanteismatriisiBButton = new javax.swing.JButton();
        potenssiinBButton = new javax.swing.JButton();
        potenssiinBText = new javax.swing.JTextField();
        lataaBButton = new javax.swing.JButton();
        matriisiCPanel = new javax.swing.JPanel();
        rivitCLabel = new javax.swing.JLabel();
        rivitCText = new javax.swing.JTextField();
        sarakkeetCLabel = new javax.swing.JLabel();
        sarakkeetCText = new javax.swing.JTextField();
        matriisiCScroll = new javax.swing.JScrollPane();
        matriisiCText = new javax.swing.JTextArea();
        tallennaCText = new javax.swing.JTextField();
        neliomatriisiCLabel = new javax.swing.JLabel();
        symmetrinenCLabel = new javax.swing.JLabel();
        antisymmetrinenCLabel = new javax.swing.JLabel();
        kaantyvaCLabel = new javax.swing.JLabel();
        ortogonaalinenCLabel = new javax.swing.JLabel();
        determinanttiCLabel = new javax.swing.JLabel();
        tiedotCButton = new javax.swing.JButton();
        ortogonaalinenCTulosLabel = new javax.swing.JLabel();
        determinanttiCTulosLabel = new javax.swing.JLabel();
        antisymmetrinenCTulosLabel = new javax.swing.JLabel();
        kaantyvaCTulosLabel = new javax.swing.JLabel();
        symmetrinenCTulosLabel = new javax.swing.JLabel();
        neliomatriisiCTulosLabel = new javax.swing.JLabel();
        transpoosiCButton = new javax.swing.JButton();
        kaanteismatriisiCButton = new javax.swing.JButton();
        potenssiinCButton = new javax.swing.JButton();
        potenssiinCText = new javax.swing.JTextField();
        tallennaCButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Matriisilaskin");
        setMinimumSize(new java.awt.Dimension(720, 480));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        alustaPanel.setPreferredSize(new java.awt.Dimension(720, 480));

        matriisiAPanel.setPreferredSize(new java.awt.Dimension(209, 420));

        rivitALabel.setText("Rivit");

        rivitAText.setMinimumSize(new java.awt.Dimension(28, 20));

        sarakkeetALabel.setText("Sarakkeet");

        sarakkeetAText.setMinimumSize(new java.awt.Dimension(28, 20));

        matriisiAText.setColumns(17);
        matriisiAText.setRows(5);
        matriisiAScroll.setViewportView(matriisiAText);

        lataaAText.setText("matriisi.txt");

        neliomatriisiALabel.setText("Neliömatriisi");

        symmetrinenALabel.setText("Symmetrinen");

        antisymmetrinenALabel.setText("Antisymmetrinen");

        kaantyvaALabel.setText("Kääntyvä");

        ortogonaalinenALabel.setText("Ortogonaalinen");

        determinanttiALabel.setText("Determinantti");

        tiedotAButton.setText("Määritä tiedot");
        tiedotAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiedotAButtonActionPerformed(evt);
            }
        });

        ortogonaalinenATulosLabel.setText("-");

        determinanttiATulosLabel.setText("-");

        antisymmetrinenATulosLabel.setText("-");

        kaantyvaATulosLabel.setText("-");

        symmetrinenATulosLabel.setText("-");

        neliomatriisiATulosLabel.setText("-");

        transpoosiAButton.setText("Transpoosi");
        transpoosiAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transpoosiAButtonActionPerformed(evt);
            }
        });

        kaanteismatriisiAButton.setText("Käänteismatriisi");
        kaanteismatriisiAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaanteismatriisiAButtonActionPerformed(evt);
            }
        });

        potenssiinAButton.setText("Potenssiin");
        potenssiinAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                potenssiinAButtonActionPerformed(evt);
            }
        });

        potenssiinAText.setText("2");
        potenssiinAText.setMinimumSize(new java.awt.Dimension(28, 20));

        lataaAButton.setText("Lataa");
        lataaAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lataaAButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout matriisiAPanelLayout = new javax.swing.GroupLayout(matriisiAPanel);
        matriisiAPanel.setLayout(matriisiAPanelLayout);
        matriisiAPanelLayout.setHorizontalGroup(
            matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matriisiAPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(matriisiAPanelLayout.createSequentialGroup()
                            .addComponent(rivitALabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(rivitAText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sarakkeetALabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sarakkeetAText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(matriisiAScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tiedotAButton)
                        .addGroup(matriisiAPanelLayout.createSequentialGroup()
                            .addComponent(lataaAButton)
                            .addGap(4, 4, 4)
                            .addComponent(lataaAText))
                        .addGroup(matriisiAPanelLayout.createSequentialGroup()
                            .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(symmetrinenALabel)
                                .addComponent(neliomatriisiALabel))
                            .addGap(36, 36, 36)
                            .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(neliomatriisiATulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(symmetrinenATulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(matriisiAPanelLayout.createSequentialGroup()
                            .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(antisymmetrinenALabel)
                                .addComponent(kaantyvaALabel)
                                .addComponent(ortogonaalinenALabel)
                                .addComponent(determinanttiALabel))
                            .addGap(18, 18, 18)
                            .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(antisymmetrinenATulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(kaantyvaATulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ortogonaalinenATulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(determinanttiATulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(transpoosiAButton)
                    .addComponent(kaanteismatriisiAButton)
                    .addGroup(matriisiAPanelLayout.createSequentialGroup()
                        .addComponent(potenssiinAButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(potenssiinAText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        matriisiAPanelLayout.setVerticalGroup(
            matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matriisiAPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rivitALabel)
                    .addComponent(rivitAText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sarakkeetALabel)
                    .addComponent(sarakkeetAText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matriisiAScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lataaAText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lataaAButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(neliomatriisiALabel)
                    .addComponent(neliomatriisiATulosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(symmetrinenALabel)
                    .addComponent(symmetrinenATulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(antisymmetrinenALabel)
                    .addComponent(antisymmetrinenATulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kaantyvaALabel)
                    .addComponent(kaantyvaATulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ortogonaalinenALabel)
                    .addComponent(ortogonaalinenATulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(determinanttiALabel)
                    .addComponent(determinanttiATulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tiedotAButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transpoosiAButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kaanteismatriisiAButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(potenssiinAButton)
                    .addComponent(potenssiinAText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        summaaButton.setText("+");
        summaaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaaButtonActionPerformed(evt);
            }
        });

        vahennaButton.setText("-");
        vahennaButton.setPreferredSize(new java.awt.Dimension(41, 23));
        vahennaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vahennaButtonActionPerformed(evt);
            }
        });

        kerroButton.setText("*");
        kerroButton.setPreferredSize(new java.awt.Dimension(41, 23));
        kerroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kerroButtonActionPerformed(evt);
            }
        });

        matriisiBPanel.setPreferredSize(new java.awt.Dimension(209, 420));

        rivitBLabel.setText("Rivit");

        rivitBText.setMinimumSize(new java.awt.Dimension(28, 20));

        sarakkeetBLabel.setText("Sarakkeet");

        sarakkeetBText.setMinimumSize(new java.awt.Dimension(28, 20));

        matriisiBText.setColumns(17);
        matriisiBText.setRows(5);
        matriisiBScroll.setViewportView(matriisiBText);

        lataaBText.setText("matriisi.txt");

        neliomatriisiBLabel.setText("Neliömatriisi");

        symmetrinenBLabel.setText("Symmetrinen");

        antisymmetrinenBLabel.setText("Antisymmetrinen");

        kaantyvaBLabel.setText("Kääntyvä");

        ortogonaalinenBLabel.setText("Ortogonaalinen");

        determinanttiBLabel.setText("Determinantti");

        tiedotBButton.setText("Määritä tiedot");
        tiedotBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiedotBButtonActionPerformed(evt);
            }
        });

        ortogonaalinenBTulosLabel.setText("-");

        determinanttiBTulosLabel.setText("-");

        antisymmetrinenBTulosLabel.setText("-");

        kaantyvaBTulosLabel.setText("-");

        symmetrinenBTulosLabel.setText("-");

        neliomatriisiBTulosLabel.setText("-");

        transpoosiBButton.setText("Transpoosi");
        transpoosiBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transpoosiBButtonActionPerformed(evt);
            }
        });

        kaanteismatriisiBButton.setText("Käänteismatriisi");
        kaanteismatriisiBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaanteismatriisiBButtonActionPerformed(evt);
            }
        });

        potenssiinBButton.setText("Potenssiin");
        potenssiinBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                potenssiinBButtonActionPerformed(evt);
            }
        });

        potenssiinBText.setText("2");
        potenssiinBText.setMinimumSize(new java.awt.Dimension(28, 20));

        lataaBButton.setText("Lataa");
        lataaBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lataaBButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout matriisiBPanelLayout = new javax.swing.GroupLayout(matriisiBPanel);
        matriisiBPanel.setLayout(matriisiBPanelLayout);
        matriisiBPanelLayout.setHorizontalGroup(
            matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matriisiBPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(matriisiBPanelLayout.createSequentialGroup()
                            .addComponent(rivitBLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(rivitBText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sarakkeetBLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sarakkeetBText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(matriisiBScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tiedotBButton)
                        .addGroup(matriisiBPanelLayout.createSequentialGroup()
                            .addComponent(lataaBButton)
                            .addGap(4, 4, 4)
                            .addComponent(lataaBText))
                        .addGroup(matriisiBPanelLayout.createSequentialGroup()
                            .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(symmetrinenBLabel)
                                .addComponent(neliomatriisiBLabel))
                            .addGap(36, 36, 36)
                            .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(neliomatriisiBTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(symmetrinenBTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(matriisiBPanelLayout.createSequentialGroup()
                            .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(antisymmetrinenBLabel)
                                .addComponent(kaantyvaBLabel)
                                .addComponent(ortogonaalinenBLabel)
                                .addComponent(determinanttiBLabel))
                            .addGap(18, 18, 18)
                            .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(antisymmetrinenBTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(kaantyvaBTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ortogonaalinenBTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(determinanttiBTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(transpoosiBButton)
                    .addComponent(kaanteismatriisiBButton)
                    .addGroup(matriisiBPanelLayout.createSequentialGroup()
                        .addComponent(potenssiinBButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(potenssiinBText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        matriisiBPanelLayout.setVerticalGroup(
            matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matriisiBPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rivitBLabel)
                    .addComponent(rivitBText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sarakkeetBLabel)
                    .addComponent(sarakkeetBText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matriisiBScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lataaBText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lataaBButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(neliomatriisiBLabel)
                    .addComponent(neliomatriisiBTulosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(symmetrinenBLabel)
                    .addComponent(symmetrinenBTulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(antisymmetrinenBLabel)
                    .addComponent(antisymmetrinenBTulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kaantyvaBLabel)
                    .addComponent(kaantyvaBTulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ortogonaalinenBLabel)
                    .addComponent(ortogonaalinenBTulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(determinanttiBLabel)
                    .addComponent(determinanttiBTulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tiedotBButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transpoosiBButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kaanteismatriisiBButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiBPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(potenssiinBButton)
                    .addComponent(potenssiinBText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        matriisiCPanel.setPreferredSize(new java.awt.Dimension(209, 420));

        rivitCLabel.setText("Rivit");

        rivitCText.setMinimumSize(new java.awt.Dimension(28, 20));

        sarakkeetCLabel.setText("Sarakkeet");

        sarakkeetCText.setMinimumSize(new java.awt.Dimension(28, 20));

        matriisiCText.setColumns(17);
        matriisiCText.setRows(5);
        matriisiCScroll.setViewportView(matriisiCText);

        tallennaCText.setText("vastaus.txt");

        neliomatriisiCLabel.setText("Neliömatriisi");

        symmetrinenCLabel.setText("Symmetrinen");

        antisymmetrinenCLabel.setText("Antisymmetrinen");

        kaantyvaCLabel.setText("Kääntyvä");

        ortogonaalinenCLabel.setText("Ortogonaalinen");

        determinanttiCLabel.setText("Determinantti");

        tiedotCButton.setText("Määritä tiedot");
        tiedotCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiedotCButtonActionPerformed(evt);
            }
        });

        ortogonaalinenCTulosLabel.setText("-");

        determinanttiCTulosLabel.setText("-");

        antisymmetrinenCTulosLabel.setText("-");

        kaantyvaCTulosLabel.setText("-");

        symmetrinenCTulosLabel.setText("-");

        neliomatriisiCTulosLabel.setText("-");

        transpoosiCButton.setText("Transpoosi");
        transpoosiCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transpoosiCButtonActionPerformed(evt);
            }
        });

        kaanteismatriisiCButton.setText("Käänteismatriisi");
        kaanteismatriisiCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaanteismatriisiCButtonActionPerformed(evt);
            }
        });

        potenssiinCButton.setText("Potenssiin");
        potenssiinCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                potenssiinCButtonActionPerformed(evt);
            }
        });

        potenssiinCText.setText("2");
        potenssiinCText.setMinimumSize(new java.awt.Dimension(28, 20));

        tallennaCButton.setText("Tallenna");
        tallennaCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tallennaCButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout matriisiCPanelLayout = new javax.swing.GroupLayout(matriisiCPanel);
        matriisiCPanel.setLayout(matriisiCPanelLayout);
        matriisiCPanelLayout.setHorizontalGroup(
            matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matriisiCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(matriisiCPanelLayout.createSequentialGroup()
                            .addComponent(rivitCLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(rivitCText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sarakkeetCLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sarakkeetCText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(matriisiCScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tiedotCButton)
                        .addGroup(matriisiCPanelLayout.createSequentialGroup()
                            .addComponent(tallennaCButton)
                            .addGap(4, 4, 4)
                            .addComponent(tallennaCText))
                        .addGroup(matriisiCPanelLayout.createSequentialGroup()
                            .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(symmetrinenCLabel)
                                .addComponent(neliomatriisiCLabel))
                            .addGap(36, 36, 36)
                            .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(neliomatriisiCTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(symmetrinenCTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(matriisiCPanelLayout.createSequentialGroup()
                            .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(antisymmetrinenCLabel)
                                .addComponent(kaantyvaCLabel)
                                .addComponent(ortogonaalinenCLabel)
                                .addComponent(determinanttiCLabel))
                            .addGap(18, 18, 18)
                            .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(antisymmetrinenCTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(kaantyvaCTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ortogonaalinenCTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(determinanttiCTulosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(transpoosiCButton)
                    .addComponent(kaanteismatriisiCButton)
                    .addGroup(matriisiCPanelLayout.createSequentialGroup()
                        .addComponent(potenssiinCButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(potenssiinCText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        matriisiCPanelLayout.setVerticalGroup(
            matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matriisiCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rivitCLabel)
                    .addComponent(rivitCText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sarakkeetCLabel)
                    .addComponent(sarakkeetCText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matriisiCScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tallennaCText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tallennaCButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(neliomatriisiCLabel)
                    .addComponent(neliomatriisiCTulosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(symmetrinenCLabel)
                    .addComponent(symmetrinenCTulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(antisymmetrinenCLabel)
                    .addComponent(antisymmetrinenCTulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kaantyvaCLabel)
                    .addComponent(kaantyvaCTulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ortogonaalinenCLabel)
                    .addComponent(ortogonaalinenCTulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(determinanttiCLabel)
                    .addComponent(determinanttiCTulosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tiedotCButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transpoosiCButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kaanteismatriisiCButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matriisiCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(potenssiinCButton)
                    .addComponent(potenssiinCText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jLabel1.setText("Vastausmatriisi");

        jLabel2.setText("Kirjoita matriisit matriisimuodossa tai riveittäin, jotta saat haluamasi vastauksen");

        javax.swing.GroupLayout alustaPanelLayout = new javax.swing.GroupLayout(alustaPanel);
        alustaPanel.setLayout(alustaPanelLayout);
        alustaPanelLayout.setHorizontalGroup(
            alustaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alustaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(matriisiAPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(alustaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(summaaButton)
                    .addComponent(vahennaButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kerroButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matriisiBPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(matriisiCPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alustaPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(74, 74, 74))
        );
        alustaPanelLayout.setVerticalGroup(
            alustaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alustaPanelLayout.createSequentialGroup()
                .addGroup(alustaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(alustaPanelLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(summaaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vahennaButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kerroButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(alustaPanelLayout.createSequentialGroup()
                        .addGroup(alustaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(alustaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(matriisiBPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matriisiAPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matriisiCPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        getContentPane().add(alustaPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void summaaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaaButtonActionPerformed
        if (!lataaMatriisiA() || !lataaMatriisiB()) {
            return;
        } else if (!luoMatriisiA() || !luoMatriisiB()) {
            return;
        } else if(!tarkastaSumma()){
            return;
        } 

        matriisiC = laskin.summaa(matriisiA, matriisiB);
        naytaC();
    }//GEN-LAST:event_summaaButtonActionPerformed

    private void tiedotAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiedotAButtonActionPerformed
        if (!lataaMatriisiA() || !luoMatriisiA()) {
            return;
        }
        neliomatriisiATulosLabel.setText("" + laskin.onkoNeliomatriisi(matriisiA));
        symmetrinenATulosLabel.setText("" + laskin.onkoSymmetrinen(matriisiA));
        antisymmetrinenATulosLabel.setText("" + laskin.onkoAntisymmetrinen(matriisiA));
        try {
            determinanttiATulosLabel.setText("" + laskin.laskeDeterminantti(matriisiA));
            kaantyvaATulosLabel.setText("" + laskin.onkoKaantyva(matriisiA));
            ortogonaalinenATulosLabel.setText("" + laskin.onkoOrtogonaalinen(matriisiA));         
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tiedotAButtonActionPerformed

    private void tiedotBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiedotBButtonActionPerformed
        if (!lataaMatriisiB() || !luoMatriisiB()) {
            return;
        }
        neliomatriisiBTulosLabel.setText("" + laskin.onkoNeliomatriisi(matriisiB));
        symmetrinenBTulosLabel.setText("" + laskin.onkoSymmetrinen(matriisiB));
        antisymmetrinenBTulosLabel.setText("" + laskin.onkoAntisymmetrinen(matriisiB));
        try {
            determinanttiBTulosLabel.setText("" + laskin.laskeDeterminantti(matriisiB));
            kaantyvaBTulosLabel.setText("" + laskin.onkoKaantyva(matriisiB));
            ortogonaalinenBTulosLabel.setText("" + laskin.onkoOrtogonaalinen(matriisiB));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tiedotBButtonActionPerformed

    private void tiedotCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiedotCButtonActionPerformed
        if (!lataaMatriisiC() || !luoMatriisiC()) {
            return;
        }
        neliomatriisiCTulosLabel.setText("" + laskin.onkoNeliomatriisi(matriisiC));
        symmetrinenCTulosLabel.setText("" + laskin.onkoSymmetrinen(matriisiC));
        antisymmetrinenCTulosLabel.setText("" + laskin.onkoAntisymmetrinen(matriisiC));
        try {
            determinanttiCTulosLabel.setText("" + laskin.laskeDeterminantti(matriisiC));
            kaantyvaCTulosLabel.setText("" + laskin.onkoKaantyva(matriisiC));
            ortogonaalinenCTulosLabel.setText("" + laskin.onkoOrtogonaalinen(matriisiC));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tiedotCButtonActionPerformed

    private void vahennaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vahennaButtonActionPerformed
        if (!lataaMatriisiA() || !lataaMatriisiB()) {
            return;
        } else if (!luoMatriisiA() || !luoMatriisiB()) {
            return;
        } else if(!tarkastaErotus()){
            return;
        } 

        matriisiC = laskin.vahenna(matriisiA, matriisiB);
        naytaC();
    }//GEN-LAST:event_vahennaButtonActionPerformed

    private void kerroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kerroButtonActionPerformed
        if (!lataaMatriisiA() || !lataaMatriisiB()) {
            return;
        } else if (!luoMatriisiA() || !luoMatriisiB()) {
            return;
        } else if(!tarkastaKertolasku()){
            return;
        } 
        
        try {
            matriisiC = laskin.kerroStrassenilla(matriisiA, matriisiB);
        } catch (Exception e) {
            matriisiC = laskin.kerro(matriisiA, matriisiB);
        }   
        naytaC();
    }//GEN-LAST:event_kerroButtonActionPerformed

    private void transpoosiAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transpoosiAButtonActionPerformed
        if (!lataaMatriisiA() || !luoMatriisiA()) {
            return;
        }
        matriisiA = laskin.transpoosaa(matriisiA);
        naytaA();
    }//GEN-LAST:event_transpoosiAButtonActionPerformed

    private void transpoosiBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transpoosiBButtonActionPerformed
        if (!lataaMatriisiB() || !luoMatriisiB()) {
            return;
        }
        matriisiB = laskin.transpoosaa(matriisiB);
        naytaB();
    }//GEN-LAST:event_transpoosiBButtonActionPerformed

    private void transpoosiCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transpoosiCButtonActionPerformed
        if (!lataaMatriisiC() || !luoMatriisiC()) {
            return;
        }
        matriisiC = laskin.transpoosaa(matriisiC);
        naytaC();
    }//GEN-LAST:event_transpoosiCButtonActionPerformed

    private void kaanteismatriisiAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaanteismatriisiAButtonActionPerformed
        if (!lataaMatriisiA() || !luoMatriisiA()) {
            return;
        } else if(!laskin.onkoNeliomatriisi(matriisiA)){
            virheEiNelio();
            return;
        }
        try {
            matriisiA = laskin.invertoi(matriisiA);
        } catch (Exception e) {
            virheInvertoi();
        }    
        naytaA();
    }//GEN-LAST:event_kaanteismatriisiAButtonActionPerformed

    private void kaanteismatriisiBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaanteismatriisiBButtonActionPerformed
        if (!lataaMatriisiB() || !luoMatriisiB()) {
            return;
        } else if(!laskin.onkoNeliomatriisi(matriisiB)){
            virheEiNelio();
            return;
        }
        try {
            matriisiB = laskin.invertoi(matriisiB);
        } catch (Exception e) {
            virheInvertoi();
        }    
        naytaB();
    }//GEN-LAST:event_kaanteismatriisiBButtonActionPerformed

    private void kaanteismatriisiCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaanteismatriisiCButtonActionPerformed
        if (!lataaMatriisiC() || !luoMatriisiC()) {
            return;
        } else if(!laskin.onkoNeliomatriisi(matriisiC)){
            virheEiNelio();
            return;
        }
        try {
            matriisiC = laskin.invertoi(matriisiC);
        } catch (Exception e) {
            virheInvertoi();
        }    
        naytaC();
    }//GEN-LAST:event_kaanteismatriisiCButtonActionPerformed

    private void potenssiinAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_potenssiinAButtonActionPerformed
        if (!lataaMatriisiA() || !luoMatriisiA()) {
            return;
        } else if(!laskin.onkoNeliomatriisi(matriisiA)){
            virheEiNelio();
            return;
        }
        try {
            matriisiA = laskin.neliomatriisiPotenssiin(matriisiA, 
                        Integer.parseInt(potenssiinAText.getText()));
        } catch (Exception e) {
            virhePotenssi();
            return;
        }
        naytaA();
    }//GEN-LAST:event_potenssiinAButtonActionPerformed

    private void potenssiinBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_potenssiinBButtonActionPerformed
        if (!lataaMatriisiB() || !luoMatriisiB()) {
            return;
        } else if(!laskin.onkoNeliomatriisi(matriisiB)){
            virheEiNelio();
            return;
        }
        try {
            matriisiB = laskin.neliomatriisiPotenssiin(matriisiB, 
                        Integer.parseInt(potenssiinBText.getText()));
        } catch (Exception e) {
            virhePotenssi();
            return;
        }
        naytaB();
    }//GEN-LAST:event_potenssiinBButtonActionPerformed

    private void potenssiinCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_potenssiinCButtonActionPerformed
        if (!lataaMatriisiC() || !luoMatriisiC()) {
            return;
        } else if(!laskin.onkoNeliomatriisi(matriisiC)){
            virheEiNelio();
            return;
        }
        try {
            matriisiC = laskin.neliomatriisiPotenssiin(matriisiC, 
                        Integer.parseInt(potenssiinCText.getText()));
        } catch (Exception e) {
            virhePotenssi();
            return;
        }
        naytaC();
    }//GEN-LAST:event_potenssiinCButtonActionPerformed

    private void lataaAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lataaAButtonActionPerformed
        try {
            matriisiA = matriisienlukija.lue(lataaAText.getText());
            naytaA();
        } catch (Exception e) {
            virheLataus();
        }
    }//GEN-LAST:event_lataaAButtonActionPerformed

    private void lataaBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lataaBButtonActionPerformed
        try {
            matriisiB = matriisienlukija.lue(lataaBText.getText());
            naytaB();
        } catch (Exception e) {
            virheLataus();
        }
    }//GEN-LAST:event_lataaBButtonActionPerformed

    private void tallennaCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tallennaCButtonActionPerformed
        if (!lataaMatriisiC() || !luoMatriisiC()) {
            return;
        }
        try {
            tallentaja.tallenna(matriisiC, tallennaCText.getText());
        } catch (Exception e) {
            virheTallennus();
        }
    }//GEN-LAST:event_tallennaCButtonActionPerformed

    private boolean lataaMatriisiA() {
        try {
            rivitA = Integer.parseInt(rivitAText.getText());
            sarakkeetA = Integer.parseInt(sarakkeetAText.getText());
            matriisiAString = matriisiAText.getText();
        } catch (Exception e) {
            if(e.getClass() == NumberFormatException.class) {
                virheAKoko();
                return false;
            }
            virheLataaA();
            return false;
        }
        return true;
    }

    private boolean lataaMatriisiB() {
        try {
            rivitB = Integer.parseInt(rivitBText.getText());
            sarakkeetB = Integer.parseInt(sarakkeetBText.getText());
            matriisiBString = matriisiBText.getText();
        } catch (Exception e) {
            if(e.getClass() == NumberFormatException.class) {
                virheBKoko();
                return false;
            }
            virheLataaB();
            return false;
        }
        return true;
    }
    
    private boolean lataaMatriisiC() {
        try {
            rivitC = Integer.parseInt(rivitCText.getText());
            sarakkeetC = Integer.parseInt(sarakkeetCText.getText());
            matriisiCString = matriisiCText.getText();
        } catch (Exception e) {
            if(e.getClass() == NumberFormatException.class) {
                virheCKoko();
                return false;
            }
            virheLataaC();
            return false;
        }
        return true;
    }

    private boolean luoMatriisiA() {
        if(!tarkastaAKoko()) {
            return false;
        }
        matriisiA = new double[rivitA][sarakkeetA];

        if (matriisiAString.length() < 2 * (rivitA - 1) * sarakkeetA) {
            virheMatriisiA();
            return false;
        }

        return lueMatriisiA();
    }

    private boolean luoMatriisiB() {
        if(!tarkastaBKoko()) {
            return false;
        }
        matriisiB = new double[rivitB][sarakkeetB];

        if (matriisiBString.length() < 2 * (rivitB - 1) * sarakkeetB) {
            virheMatriisiB();
            return false;
        }

        return lueMatriisiB();
    }
    
    private boolean luoMatriisiC() {
        if(!tarkastaCKoko()) {
            return false;
        }
        matriisiC = new double[rivitC][sarakkeetC];

        if (matriisiCString.length() < 2 * (rivitC - 1) * sarakkeetC) {
            virheMatriisiC();
            return false;
        }

        return lueMatriisiC();
    }

    private boolean lueMatriisiA() {
        lukija = new Scanner(matriisiAString);
        for (int rivit = 0; rivit < rivitA; rivit++) {
            for (int sarakkeet = 0; sarakkeet < sarakkeetA; sarakkeet++) {
                try {
                    matriisiA[rivit][sarakkeet] = Double.parseDouble(lukija.next());
                } catch (Exception e) {
                    virheMatriisiA();
                    return false;
                }
            }
        }
        lukija.close();
        return true;
    }

    private boolean lueMatriisiB() {
        lukija = new Scanner(matriisiBString);
        for (int rivit = 0; rivit < rivitB; rivit++) {
            for (int sarakkeet = 0; sarakkeet < sarakkeetB; sarakkeet++) {
                try {
                    matriisiB[rivit][sarakkeet] = Double.parseDouble(lukija.next());
                } catch (Exception e) {
                    virheMatriisiB();
                    return false;
                }
            }
        }
        lukija.close();
        return true;
    }
    
    private boolean lueMatriisiC() {
        lukija = new Scanner(matriisiCString);
        for (int rivit = 0; rivit < rivitC; rivit++) {
            for (int sarakkeet = 0; sarakkeet < sarakkeetC; sarakkeet++) {
                try {
                    matriisiC[rivit][sarakkeet] = Double.parseDouble(lukija.next());
                } catch (Exception e) {
                    virheMatriisiC();
                    return false;
                }
            }
        }
        lukija.close();
        return true;
    }
    
    private void naytaA() {
        rivitA = matriisiA.length;
        sarakkeetA = matriisiA[0].length;
        rivitAText.setText("" + rivitA);
        sarakkeetAText.setText("" + sarakkeetA);
        matriisiAString = "";
        for (int rivit = 0; rivit < rivitA; rivit++) {
            for (int sarakkeet = 0; sarakkeet < sarakkeetA; sarakkeet++) {
                matriisiAString += matriisiA[rivit][sarakkeet]+"   ";
            }
            matriisiAString += "\n";
        }
        matriisiAText.setText(matriisiAString);
    }
    
    private void naytaB() {
        rivitB = matriisiB.length;
        sarakkeetB = matriisiB[0].length;
        rivitBText.setText("" + rivitB);
        sarakkeetBText.setText("" + sarakkeetB);
        matriisiBString = "";
        for (int rivit = 0; rivit < rivitB; rivit++) {
            for (int sarakkeet = 0; sarakkeet < sarakkeetB; sarakkeet++) {
                matriisiBString += matriisiB[rivit][sarakkeet]+"   ";
            }
            matriisiBString += "\n";
        }
        matriisiBText.setText(matriisiBString);
    }

    private void naytaC() {
        rivitC = matriisiC.length;
        sarakkeetC = matriisiC[0].length;
        rivitCText.setText("" + rivitC);
        sarakkeetCText.setText("" + sarakkeetC);
        matriisiCString = "";
        for (int rivit = 0; rivit < rivitC; rivit++) {
            for (int sarakkeet = 0; sarakkeet < sarakkeetC; sarakkeet++) {
                matriisiCString += matriisiC[rivit][sarakkeet]+"   ";
            }
            matriisiCString += "\n";
        }
        matriisiCText.setText(matriisiCString);
    }
    
    private boolean tarkastaSumma() {
        if (rivitA != rivitB || sarakkeetA != sarakkeetB) {
            virheSumma();
            return false;
        }
        return true;
    }
    
    private boolean tarkastaErotus() {
        if (rivitA != rivitB || sarakkeetA != sarakkeetB) {
            virheVahennys();
            return false;
        }
        return true;
    }
    
    private boolean tarkastaKertolasku() {
        if (sarakkeetA != rivitB) {
            virheKertolasku();
            return false;
        }
        return true;
    }
    
    private boolean tarkastaAKoko() {
        if (rivitA <= 0 || sarakkeetA <= 0) {
            virheAKoko();
            return false;
        }
        return true;
    }
    
    private boolean tarkastaBKoko() {
        if (rivitB <= 0 || sarakkeetB <= 0) {
            virheBKoko();
            return false;
        }
        return true;
    }
    
    private boolean tarkastaCKoko() {
        if (rivitC <= 0 || sarakkeetC <= 0) {
            virheCKoko();
            return false;
        }
        return true;
    }

    private void virheLataaA() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nVasemman matriisin lataamisessa tapahtui virhe", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }

    private void virheLataaB() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nKeskimmäisen matriisin lataamisessa tapahtui virhe", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void virheLataaC() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nVastausmatriisin lataamisessa tapahtui virhe", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }

    private void virheAKoko() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nTarkasta, että vasemmanpuoleisen matriisin kokomäärityksissä"
                + "\nkäytetään vain positiivisia kokonaislukuja, eikä siellä"
                + "\nole ylimääräisiä välilyöntejä", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }

    private void virheBKoko() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nTarkasta, että keskimmäisen matriisin kokomäärityksissä"
                + "\nkäytetään vain positiivisia kokonaislukuja, eikä siellä"
                + "\nole ylimääräisiä välilyöntejä", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void virheCKoko() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nTarkasta, että vastausmatriisin kokomäärityksissä"
                + "\nkäytetään vain positiivisia kokonaislukuja, eikä siellä"
                + "\nole ylimääräisiä välilyöntejä", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }

    private void virheSumma() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nMatriisien yhteenlaskussa yhteenlaskettavien matriisien"
                + "\nkoot pitää olla samat", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void virheVahennys() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nMatriisien vähennyslaskussa toisistaan vähennettävien"
                + "\nmatriisien koot pitää olla samat", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void virheKertolasku() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nMatriisien kertolaskussa vasemmanpuoleisen matriisin"
                + "\nsarakkeiden määrä pitää olla sama kuin oikeanpuoleisen"
                + "\nmatriisin rivien määrä", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void virheEiNelio() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nMatriisin pitää olla neliömatriisi", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void virheInvertoi() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nMatriisi ei ole kääntyvä, joten sillä ei ole"
                + "\nkäänteismatriisia", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void virhePotenssi() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nTarkasta, että olet antanut potenssiksi nollaa suuremman"
                + "\ntai yhtäsuuren arvon", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void virheLataus() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nTarkasta, että ladattava tiedosto sijaitsee ohjelman"
                + "\nkanssa samassa hakemistopolussa", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void virheTallennus() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nTarkasta, että tallennettava tiedostonimi sisältää vain"
                + "\ntavallisia kirjaimia ja/tai yhden pisteen.", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }

    private void virheMatriisiA() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nVasemman matriisin syötteessä tapahtui virhe. Tarkasta,"
                + "\nettä se sisältää vain liukulukuja. Tarkasta myös, että"
                + "\nalkioita on oikea määrä.", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }

    private void virheMatriisiB() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nKeskimmäisen matriisin syötteessä tapahtui virhe. Tarkasta,"
                + "\nettä se sisältää vain liukulukuja. Tarkasta myös, että"
                + "\nalkioita on oikea määrä.", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }
    
    private void virheMatriisiC() {
        JOptionPane.showMessageDialog(this, "Virhe:\n"
                + "\nVastausmatriisin syötteessä tapahtui virhe. Tarkasta,"
                + "\nettä se sisältää vain liukulukuja. Tarkasta myös, että"
                + "\nalkioita on oikea määrä.", "Virhe",
                JOptionPane.ERROR_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kayttoliittyma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kayttoliittyma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kayttoliittyma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kayttoliittyma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kayttoliittyma().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel alustaPanel;
    private javax.swing.JLabel antisymmetrinenALabel;
    private javax.swing.JLabel antisymmetrinenATulosLabel;
    private javax.swing.JLabel antisymmetrinenBLabel;
    private javax.swing.JLabel antisymmetrinenBTulosLabel;
    private javax.swing.JLabel antisymmetrinenCLabel;
    private javax.swing.JLabel antisymmetrinenCTulosLabel;
    private javax.swing.JLabel determinanttiALabel;
    private javax.swing.JLabel determinanttiATulosLabel;
    private javax.swing.JLabel determinanttiBLabel;
    private javax.swing.JLabel determinanttiBTulosLabel;
    private javax.swing.JLabel determinanttiCLabel;
    private javax.swing.JLabel determinanttiCTulosLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton kaanteismatriisiAButton;
    private javax.swing.JButton kaanteismatriisiBButton;
    private javax.swing.JButton kaanteismatriisiCButton;
    private javax.swing.JLabel kaantyvaALabel;
    private javax.swing.JLabel kaantyvaATulosLabel;
    private javax.swing.JLabel kaantyvaBLabel;
    private javax.swing.JLabel kaantyvaBTulosLabel;
    private javax.swing.JLabel kaantyvaCLabel;
    private javax.swing.JLabel kaantyvaCTulosLabel;
    private javax.swing.JButton kerroButton;
    private javax.swing.JButton lataaAButton;
    private javax.swing.JTextField lataaAText;
    private javax.swing.JButton lataaBButton;
    private javax.swing.JTextField lataaBText;
    private javax.swing.JPanel matriisiAPanel;
    private javax.swing.JScrollPane matriisiAScroll;
    private javax.swing.JTextArea matriisiAText;
    private javax.swing.JPanel matriisiBPanel;
    private javax.swing.JScrollPane matriisiBScroll;
    private javax.swing.JTextArea matriisiBText;
    private javax.swing.JPanel matriisiCPanel;
    private javax.swing.JScrollPane matriisiCScroll;
    private javax.swing.JTextArea matriisiCText;
    private javax.swing.JLabel neliomatriisiALabel;
    private javax.swing.JLabel neliomatriisiATulosLabel;
    private javax.swing.JLabel neliomatriisiBLabel;
    private javax.swing.JLabel neliomatriisiBTulosLabel;
    private javax.swing.JLabel neliomatriisiCLabel;
    private javax.swing.JLabel neliomatriisiCTulosLabel;
    private javax.swing.JLabel ortogonaalinenALabel;
    private javax.swing.JLabel ortogonaalinenATulosLabel;
    private javax.swing.JLabel ortogonaalinenBLabel;
    private javax.swing.JLabel ortogonaalinenBTulosLabel;
    private javax.swing.JLabel ortogonaalinenCLabel;
    private javax.swing.JLabel ortogonaalinenCTulosLabel;
    private javax.swing.JButton potenssiinAButton;
    private javax.swing.JTextField potenssiinAText;
    private javax.swing.JButton potenssiinBButton;
    private javax.swing.JTextField potenssiinBText;
    private javax.swing.JButton potenssiinCButton;
    private javax.swing.JTextField potenssiinCText;
    private javax.swing.JLabel rivitALabel;
    private javax.swing.JTextField rivitAText;
    private javax.swing.JLabel rivitBLabel;
    private javax.swing.JTextField rivitBText;
    private javax.swing.JLabel rivitCLabel;
    private javax.swing.JTextField rivitCText;
    private javax.swing.JLabel sarakkeetALabel;
    private javax.swing.JTextField sarakkeetAText;
    private javax.swing.JLabel sarakkeetBLabel;
    private javax.swing.JTextField sarakkeetBText;
    private javax.swing.JLabel sarakkeetCLabel;
    private javax.swing.JTextField sarakkeetCText;
    private javax.swing.JButton summaaButton;
    private javax.swing.JLabel symmetrinenALabel;
    private javax.swing.JLabel symmetrinenATulosLabel;
    private javax.swing.JLabel symmetrinenBLabel;
    private javax.swing.JLabel symmetrinenBTulosLabel;
    private javax.swing.JLabel symmetrinenCLabel;
    private javax.swing.JLabel symmetrinenCTulosLabel;
    private javax.swing.JButton tallennaCButton;
    private javax.swing.JTextField tallennaCText;
    private javax.swing.JButton tiedotAButton;
    private javax.swing.JButton tiedotBButton;
    private javax.swing.JButton tiedotCButton;
    private javax.swing.JButton transpoosiAButton;
    private javax.swing.JButton transpoosiBButton;
    private javax.swing.JButton transpoosiCButton;
    private javax.swing.JButton vahennaButton;
    // End of variables declaration//GEN-END:variables
}